#!/bin/bash
set -e


CWD=$(pwd)
CLEAN=false # Reserved for future use


# Parsing arguments src: https://stackoverflow.com/questions/192249/how-do-i-parse-command-line-arguments-in-bash

LONGOPTS=clean
OPTIONS=c

PARSED=$(getopt --options=$OPTIONS --longoptions=$LONGOPTS --name "$0" -- "$@") || exit 1
eval set -- "$PARSED"

while true; do
  case "$1" in
    -c|--clean)
      CLEAN=true
      shift
      ;;
    --)
      shift
      break # -- signals end of optional arguments
      ;;
    *)
      echo "wow, something went wrong"
      exit 1
      ;;
  esac
done
#echo "CLEAN:$CLEAN"

# handle positional arguments
#echo "POSITIONAL_ARGUMENTS:$@"


# Installing prerequisites
ensure_installed() {
  if ! command -v "$1" 2>&1 >/dev/null; then
    echo "$1" "not found, installing.."
    shift
    for var in "$@"; do
      eval "$var"
    done
  fi
}

ensure_installed git "sudo pacman -Sy git"
ensure_installed zsh "sudo pacman -Sy zsh"
ensure_installed nvim "sudo pacman -Sy neovim"
ensure_installed yay \
  "sudo pacman -Sy --needed git base-devel && git clone https://aur.archlinux.org/yay.git && cd yay && makepkg -si" \
  "cd .. && rm -rf yay" # cleanup

echo "Prerequisites are installed."


# Install themes for awesomewm
if [ -f ~/.config/awesome/rc.lua ]
then
  echo "AwesomeWM config found, skipping.."
else
  echo "Setting up AwesomeWM theme.."
  mkdir -p ~/.config/awesome && cd ~/.config/awesome
  git clone https://github.com/lcpz/awesome-copycats.git .
  git clone https://github.com/lcpz/awesome-freedesktop.git freedesktop
  git clone https://github.com/lcpz/lain.git lain
  echo "Copying rc.lua ."
  cp "$CWD"/rc.lua ~/.config/awesome/
  echo "AwesomeWM setup complete."
fi


# Setup nvim-kickstart
if [ -f ~/.config/nvim/init.lua ]
then
  echo "nvim config found, skipping.."
else
  echo "Setting up nvim-kickstart.."
  mkdir -p ~/.config/nvim && cd ~/.config/nvim
  git clone https://github.com/nvim-lua/kickstart.nvim.git .
  echo "Patching nvim-kickstart.."
  # patch created with git diff >filename.patch
  git apply "$CWD"/nvim-kickstart-patch.patch
  echo "nvim-kickstart setup complete."
fi


# alacritty
if [ -f ~/.config/alacritty/alacritty.toml ]
then
  echo "alacritty config found, skipping.."
else
  echo "Setting up Alacritty.."
  mkdir -p ~/.config/alacritty
  cp "$CWD"/alacritty.toml ~/.config/alacritty/
  echo "Alacritty setup complete."
fi


# oh my zsh
if [ -d ~/.oh-my-zsh/ ]
then
  echo "oh-my-zsh exists, skipping.."
else
  echo "Setting up oh my zsh .."
  sh -c "$(wget https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh -O -)"
fi

if [ -d ~/.oh-my-zsh/plugins/zsh-syntax-highlighting ]
then
  echo "zsh-syntax-highlight -plugin found, skipping.."
else
  echo "Installing zsh-syntax-highlighting .."
  cd ~/.oh-my-zsh/plugins/
  git clone https://github.com/zsh-users/zsh-syntax-highlighting.git
  echo "zsh-syntax-highlighting installed."
fi

if [ -d ~/.oh-my-zsh/plugins/zsh-autosuggestions ]
then
  echo "zsh-autosuggestions -plugin found, skipping.."
else
  echo "Installing zsh-autosuggestions .."
  cd ~/.oh-my-zsh/plugins/
  git clone https://github.com/zsh-users/zsh-autosuggestions
  echo "zsh-autosuggestions installed."
fi


# p10k theme
if [ -f ~/.p10k.zsh ]
then
  echo "p10k config found, skipping"
else
  echo "Installing powerlevel10k theme for zsh.."
  yay -S --noconfirm zsh-theme-powerlevel10k-git
  echo "powerlevel10k setup complete."
fi
echo "Copying .p10k.zsh .."
cp "$CWD"/.p10k.zsh ~/


echo "Copying .bashrc and .zshrc .."
cp "$CWD"/.bashrc ~/ && cp "$CWD"/.zshrc ~/

echo "Copying ranger config rc.conf .."
mkdir -p ~/.config/ranger/
cp "$CWD/rc.conf" ~/.config/ranger/

echo "DONE!"


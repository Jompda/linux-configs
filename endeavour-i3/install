#!/bin/bash
set -e

# This installscript expects to have endeavour i3 installed.

SCRIPT_DIR=$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &> /dev/null && pwd)
SOFTWARE="$SCRIPT_DIR/../software"
BIN_DIR="$SCRIPT_DIR/../bin"
CLEAN=false # Reserved for future use


# Parsing arguments src: https://stackoverflow.com/questions/192249/how-do-i-parse-command-line-arguments-in-bash

LONGOPTS=clean
OPTIONS=c

PARSED=$(getopt --options=$OPTIONS --longoptions=$LONGOPTS --name "$0" -- "$@") || exit 1
eval set -- "$PARSED"

while true; do
  case "$1" in
    -c|--clean)
      CLEAN=true
      shift
      ;;
    --)
      shift
      break # -- signals end of optional arguments
      ;;
    *)
      echo "wow, something went wrong"
      exit 1
      ;;
  esac
done
#echo "CLEAN:$CLEAN"

# handle positional arguments
#echo "POSITIONAL_ARGUMENTS:$@"


echo "Installing prerequisites.."
ensure_installed() {
  if ! command -v "$1" 2>&1 >/dev/null; then
    echo "$1" "not found, installing.."
    shift
    for var in "$@"; do
      eval "$var"
    done
  fi
}

"$BIN_DIR/pkg-install" git
"$BIN_DIR/pkg-install" zsh
ensure_installed yay \
  "sudo pacman -Sy --needed git base-devel && git clone https://aur.archlinux.org/yay.git && cd yay && makepkg -si" \
  "cd .. && rm -rf yay" # cleanup

echo "Prerequisites are installed."


echo "Installing additional software"
"$BIN_DIR/pkg-install" xcompmgr # compositor
"$BIN_DIR/pkg-install" unclutter
"$BIN_DIR/pkg-install" fuck --package thefuck # config is in .zshrc

# To get clipboard working
"$BIN_DIR/pkg-install" xclip
"$BIN_DIR/pkg-install" greenclip --aur rofi-greenclip

"$SOFTWARE/nvim-install"
"$SOFTWARE/ranger-install"
"$SOFTWARE/rofi-install"
"$SOFTWARE/ohmyzsh-install"

echo "Copying i3 config .."
cp -R "$SCRIPT_DIR/i3" ~/.config/

echo "Copying shell configs .."
cp "$SCRIPT_DIR"/.bashrc ~/
cp "$SCRIPT_DIR"/.bash_aliases ~/
cp "$SCRIPT_DIR"/.zshrc ~/

echo "Copying .xsession .."
cp "$SCRIPT_DIR"/.xsession ~/
chmod +x ~/.xsession # .xsession needs to be executable

echo "DONE!"


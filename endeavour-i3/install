#!/bin/bash
set -e

# This installscript expects to have endeavour i3 installed.
# NOTE: Following changes are not automated:
# themes for xfce4-terminal and firefox, background image

SCRIPT_DIR=$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &> /dev/null && pwd)
SOFTWARE="$SCRIPT_DIR/../software"
BIN_DIR="$SCRIPT_DIR/../bin"
CLEAN=false # Reserved for future use
DOWNLOAD_EOS_I3WM=false

# Parsing arguments src: https://stackoverflow.com/questions/192249/how-do-i-parse-command-line-arguments-in-bash

LONGOPTS=clean,download-eos-i3wm

PARSED=$(getopt --options="" --longoptions=$LONGOPTS --name "$0" -- "$@") || exit 1
eval set -- "$PARSED"

while true; do
  case "$1" in
    --clean) CLEAN=true; shift ;;
    --download-eos-i3wm) DOWNLOAD_EOS_I3WM=true; shift ;;
    # -- signals end of optional arguments
    --) shift; break ;;
    *) echo "wow, something went wrong"; exit 1 ;;
  esac
done
#echo "CLEAN:$CLEAN"

# handle positional arguments
#echo "POSITIONAL_ARGUMENTS:$@"


echo "Installing prerequisites.."
ensure_installed() {
  if ! command -v "$1" 2>&1 >/dev/null; then
    echo "$1" "not found, installing.."
    shift
    for var in "$@"; do
      eval "$var"
    done
  fi
}

"$BIN_DIR/pkg-install" git
"$BIN_DIR/pkg-install" zsh
ensure_installed yay \
  "sudo pacman -Sy --needed git base-devel && git clone https://aur.archlinux.org/yay.git && cd yay && makepkg -si" \
  "cd .. && rm -rf yay" # cleanup

echo "Prerequisites are installed."


echo "Installing additional software"
"$BIN_DIR/pkg-install" xbacklight -- package acpilight # required for amd drivers to control brightness
"$BIN_DIR/pkg-install" picom --conflicts xcompmgr # compositor
"$BIN_DIR/pkg-install" unclutter
"$BIN_DIR/pkg-install" fuck --package thefuck # config is in .zshrc

# To get clipboard working
"$BIN_DIR/pkg-install" xclip
"$BIN_DIR/pkg-install" greenclip --aur rofi-greenclip

"$SOFTWARE/nvim-install"
"$SOFTWARE/ranger-install"
"$SOFTWARE/rofi-install"
"$SOFTWARE/ohmyzsh-install"


if $DOWNLOAD_EOS_I3WM; then
  cd "$SCRIPT_DIR"
  git clone https://github.com/endeavouros-team/endeavouros-i3wm-setup.git
  cd endeavouros-i3wm-setup
  chmod +x i3_install
  ./i3_install
  echo "Installed endeavouros-i3wm, this is this experimental so configs might still be lacking."
fi


echo "Copying i3 config .."
cp -R "$SCRIPT_DIR/i3" ~/.config/

echo "Setting up custom i3blocks .."
I3BC_DIR=~/.config/i3/i3blocks-contrib
if [[ ! -d $I3BC_DIR ]]; then
  mkdir -p $I3BC_DIR
  cd $I3BC_DIR
  git init .
  git remote add -f origin https://github.com/vivien/i3blocks-contrib.git
  git config core.sparseCheckout true
  echo "arch-update/" >> .git/info/sparse-checkout
  echo "batterybar/" >> .git/info/sparse-checkout
  echo "gpu-load/" >> .git/info/sparse-checkout
  git pull origin master
  echo "Scripts are now in $I3BC_DIR"
fi

echo "Copying picom.conf .."
cp "$SCRIPT_DIR"/picom.conf ~/.config/

echo "Copying shell configs .."
cp "$SCRIPT_DIR"/.bashrc ~/
cp "$SCRIPT_DIR"/.bash_aliases ~/
cp "$SCRIPT_DIR"/.zshrc ~/

echo "Copying .xsession .."
cp "$SCRIPT_DIR"/.xsession ~/
chmod +x ~/.xsession # .xsession needs to be executable

echo "DONE!"


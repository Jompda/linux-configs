#!/bin/bash
set -e

# This installscript expects to have endeavour i3 installed.
# NOTE: Following changes are not automated:
# themes for xfce4-terminal and firefox, installation of additional eos background images

SCRIPT_DIR=$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &> /dev/null && pwd)
SOFTWARE="$SCRIPT_DIR/../software"
BIN_DIR="$SCRIPT_DIR/../bin"
CLEAN=false # Reserved for future use
DOWNLOAD_EOS_I3WM=false

# Parsing arguments src: https://stackoverflow.com/questions/192249/how-do-i-parse-command-line-arguments-in-bash

LONGOPTS=clean,download-eos-i3wm

PARSED=$(getopt --options="" --longoptions=$LONGOPTS --name "$0" -- "$@") || exit 1
eval set -- "$PARSED"

while true; do
  case "$1" in
    --clean) CLEAN=true; shift ;;
    --download-eos-i3wm) DOWNLOAD_EOS_I3WM=true; shift ;;
    # -- signals end of optional arguments
    --) shift; break ;;
    *) echo "wow, something went wrong"; exit 1 ;;
  esac
done
#echo "CLEAN:$CLEAN"

# handle positional arguments
#echo "POSITIONAL_ARGUMENTS:$@"


echo "Installing prerequisites"
ensure_installed() {
  if ! command -v "$1" 2>&1 >/dev/null; then
    echo "$1" "not found, installing"
    shift
    for var in "$@"; do
      eval "$var"
    done
  fi
}

"$BIN_DIR/pkg-install" git
"$BIN_DIR/pkg-install" zsh
ensure_installed yay \
  "sudo pacman -Sy --needed git base-devel && git clone https://aur.archlinux.org/yay.git && cd yay && makepkg -si" \
  "cd .. && rm -rf yay" # cleanup

echo "Prerequisites are installed"


echo "Installing additional software"
"$BIN_DIR/pkg-install" xbacklight --package acpilight # required for amd drivers to control brightness
"$BIN_DIR/pkg-install" picom --conflicts xcompmgr # compositor
"$BIN_DIR/pkg-install" unclutter
"$BIN_DIR/pkg-install" autotiling
"$BIN_DIR/pkg-install" rofimoji
"$BIN_DIR/pkg-install" fuck --package thefuck # config is in .zshrc
"$BIN_DIR/pkg-install" selectdefaultapplication-git
"$BIN_DIR/pkg-install" downgrade

# To get clipboard working
"$BIN_DIR/pkg-install" xclip
"$BIN_DIR/pkg-install" greenclip --aur rofi-greenclip

"$SOFTWARE/nvim/install"
"$SOFTWARE/ranger/install"
"$SOFTWARE/rofi/install"
"$SOFTWARE/ohmyzsh/install"

if "$BIN_DIR/prompt-yn" "Setup gestures?"; then
  "$BIN_DIR/pkg-install" wmctrl
  "$BIN_DIR/pkg-install" libinput-gestures --aur libinput-gestures
  "$BIN_DIR/pkg-install" gestures --aur gestures
  cp "$SCRIPT_DIR"/libinput-gestures.conf ~/.config/
  sudo usermod -a -G input jonir
fi

if $DOWNLOAD_EOS_I3WM; then
  cd "$SCRIPT_DIR"
  git clone https://github.com/endeavouros-team/endeavouros-i3wm-setup.git
  cd endeavouros-i3wm-setup
  chmod +x i3_install
  ./i3_install
  echo "Installed endeavouros-i3wm, this is this experimental so configs might still be lacking."
fi

echo "Installing themes, cursors and icons"
"$BIN_DIR/pkg-install" ttf-firacode-nerd --exists /usr/share/fonts/TTF/FiraCodeNerdFont-Bold.ttf
"$BIN_DIR/pkg-install" catppuccin-cursors-macchiato --exists /usr/share/icons/catppuccin-macchiato-blue-cursors
"$BIN_DIR/pkg-install" catppuccin-gtk-theme-macchiato --exists /usr/share/themes/catppuccin-macchiato-yellow-standard+default
if [[ ! -d ~/.local/share/icons/Catppuccin-SE ]]; then
  cd $SCRIPT_DIR
  wget https://github.com/ljmill/catppuccin-icons/releases/download/v0.2.0/Catppuccin-SE.tar.bz2
  tar -x -f Catppuccin-SE.tar.bz2
  rm Catppuccin-SE.tar.bz2
  mkdir -p ~/.local/share/icons
  mv Catppuccin-SE ~/.local/share/icons
fi
echo "Themes installed."

echo "Installing .fehbg"
cp "$SCRIPT_DIR/.fehbg" ~

echo "Installing i3 config"
cp -R "$SCRIPT_DIR/i3" ~/.config/

echo "Setting up custom i3blocks"
I3BC_DIR=~/.config/i3/i3blocks-contrib

setup_i3blocks_contrib_git() {
  mkdir -p $I3BC_DIR
  cd $I3BC_DIR
  git init .
  git remote add -f origin https://github.com/vivien/i3blocks-contrib.git
  git config core.sparseCheckout true
  cp $SCRIPT_DIR/i3blocks-contrib-checkout $I3BC_DIR/.git/info/sparse-checkout
  git pull origin master
  i3blocks_contrib_apply_diff
}

i3blocks_contrib_apply_diff() {
  echo "Applying i3blocks-contrib diff"
  cd $I3BC_DIR
  git reset --hard
  git apply --allow-empty "$SCRIPT_DIR"/i3blocks-contrib-patch.diff
  # NOTE: build bandwidth2
  cd $I3BC_DIR/bandwidth2
  make
}

if [[ ! -d $I3BC_DIR/.git ]]; then
  setup_i3blocks_contrib_git
elif ! 2>/dev/null 1>&2 diff $SCRIPT_DIR/i3blocks-contrib-checkout $I3BC_DIR/.git/info/sparse-checkout ; then
  rm -rf $I3BC_DIR
  setup_i3blocks_contrib_git
else
  cd $I3BC_DIR
  git reset --hard
  git clean -f -d
  i3blocks_contrib_apply_diff
fi


echo "Installing xfce4 configs"
# NOTE: didn't work
cp $SCRIPT_DIR/xfce-perchannel-xml/* ~/.config/xfce4/xfconf/xfce-perchannel-xml/

echo "Installing dunstrc"
mkdir -p ~/.config/dunst
cp "$SCRIPT_DIR"/dunstrc ~/.config/dunst/

echo "Installing picom.conf"
cp "$SCRIPT_DIR"/picom.conf ~/.config/

echo "Installing shell configs"
cp "$SCRIPT_DIR"/.bashrc ~/
cp "$SCRIPT_DIR"/.bash_aliases ~/
cp "$SCRIPT_DIR"/.zshrc ~/

echo "Installing X11 configs"
cp "$SCRIPT_DIR"/.Xresources ~/
cp "$SCRIPT_DIR"/.xsession ~/
chmod +x ~/.xsession # .xsession needs to be executable

echo "Installing gtk configs"
cp $SCRIPT_DIR/gtk/settings.ini ~/.config/gtk-3.0/settings.ini
cp $SCRIPT_DIR/gtk/.gtkrc-2.0 ~
cp $SCRIPT_DIR/gtk/index.theme ~/.icons/default/
sudo cp "$SCRIPT_DIR"/gtk/system-index.theme /usr/share/icons/default/index.theme
sudo cp "$SCRIPT_DIR"/gtk/slick-greeter.conf /etc/lightdm/

echo "Installing mimeapps.list"
cp "$SCRIPT_DIR"/mimeapps.list ~/.config

echo "DONE!"

